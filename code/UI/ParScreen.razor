@inherits Sandbox.UI.Panel
@namespace Facepunch.Minigolf.UI
@attribute [StyleSheet( "/UI/ParScreen.scss" )]

<root>
	@if ( Strokes == 1 )
	{
		<div class="score hole-in-one">
			<label>Hole</label>
			<label>in</label>
			<label>One</label>
		</div>
	}
	else
	{
		<div class="score @( $"score--{Score}" )">
			@foreach ( var line in ScoreText.GetValueOrDefault( Score, $"WTF {Score}" ).Split( ' ' ) )
			{
				<label>@line</label>
			}
		</div>
	}
	<label class="hole">
		@( $"Hole {Hole}" )
	</label>
</root>


@code {

	public static readonly Dictionary<int, string> ScoreText = new()
	{
		{ 4, "Condor" },
		{ 3, "Double Eagle" },
		{ 2, "Eagle" },
		{ 1, "Birdie" },
		{ 0, "Par" },
		{ -1, "Bogey" },
		{ -2, "Double Bogey" },
		{ -3, "Triple Bogey" },
		{ -4, "Quadruple Bogey" },
		{ -5, "Quintuple Bogey" },
		{ -6, "Sextuple Bogey" },
		{ -7, "Septuple Bogey" },
		{ -8, "Octuple Bogey" },
		{ -9, "Nonuple Bogey" },
		{ -10, "Decuple Bogey" },
	};

	readonly RealTimeSince _createdAt;
	static float ShowScoreForLength => 3.0f;

	private int Hole { get; }
	private int Par { get; }
	private int Strokes { get; }
	private int Score => Par - Strokes;

	public ParScreen( int hole, int par, int strokes )
	{
		Hole = hole;
		Par = par;
		Strokes = strokes;
		_createdAt = 0;
	}

	public override void Tick()
	{
		if ( _createdAt > ShowScoreForLength && !IsDeleting )
		{
			Delete();
		}
	}

	[MinigolfEvent.PlayerScored]
	private static void OnPlayerScore( IClient client, HoleInfo hole, int score )
	{
		if ( Game.LocalClient == client )
			Show( hole.Number, hole.Par, score );
	}

	[ConCmd.Client( "minigolf_debug_testscore" )]
	private static void Show( int hole, int par, int strokes )
	{
		Game.RootPanel.AddChild( new ParScreen( hole, par, strokes ) );
	}

}
